configfile: "workflow/config.yaml"


rule all:
    input:
        expand(config['gnomad_db_backup'] + '.tar.gz',
               version=config['version'])


def url_vcf(wildcards):
    return expand(
        config['download_url'][wildcards['version']]['vcf'],
        chrom=wildcards['chrom']
    )


def url_tbi(wildcards):
    return expand(
        config['download_url'][wildcards['version']]['tbi'],
        chrom=wildcards['chrom']
    )


rule download_vcf:
    params:
        url_vcf = url_vcf,
        url_tbi = url_tbi
    output:
        vcf = config['vcf'],
        tbi = config['vcf_tbi']
    run:
        shell("wget {params.url_vcf} -O {output.vcf}")
        shell("wget {params.url_tbi} -O {output.tbi}")


def vcfs(wildcards):
    version = wildcards['version']
    chroms = config['chroms'].copy()

    if version.split('.')[0] == '2':
        chroms.remove('Y')

    return expand(config['vcf'], version=wildcards['version'], chrom=chroms)


rule gnomad_rocksdb:
    input:
        vcfs = vcfs
    params:
        batch_size = config['batch_size']
    output:
        db = directory(config['gnomad_db'])
    script:
        "./create_rocksdb.py"


rule backup_gnomad_rocksdb:
    input:
        db = config['gnomad_db']
    output:
        backup = directory(config['gnomad_db_backup']),
        backup_gzip = config['gnomad_db_backup'] + '.tar.gz'
    script:
        "./backup_rocksdb.py"
